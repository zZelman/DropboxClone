#+TITLE: DropboxClone
#+AUTHOR: Kyle Avrett

This is a Linux Bash script to mimic the functionality of Dropbox using rsync and SSH

The point is to have a manual script that can sync a specific directory between multiple computers using a passive server as a go-between.

* Quickstart
    1) Clone or download this repository
    2) Change the user, password and ip inside of =home.sh= and =remote.sh=
    3) Change what is in =post_pull.sh= and =pre_push.sh=
    4) Manually ssh to the server (the user and ip from above) to add it to =~/.ssh/known_hosts=, otherwise =sshpass= will not work
    5) Run =home.sh push= or =remote.sh push= to sync everything inside of the local =~/DropboxClone= with the remote =~/DropboxClone=
    6) Change to another computer that you wish to use DropboxClone (like a laptop)
    7) Complete steps 1, 2 and 4 using the same information (skip step 3, those are files that will be synced)
    8) Run =home.sh pull= or =remote.sh pull= *twice* to sync the remote =~/DropboxClone= with the local =~/DropboxClone=. The first time is to sync all the files, the second is to have the =post_pull.sh= be accurate and run correctly

* Dependencies
    - =rsync= [[https://linux.die.net/man/1/rsync][man page]]
    - =ssh= [[https://linux.die.net/man/1/ssh][man page]]
    - =sshpass= [[https://linux.die.net/man/1/sshpass][man page]]
    - =time= [[https://linux.die.net/man/1/time][man page]]

* Usage
This is a *manual* script. Meaning, you have to run the script for it to work.

Normally what I do is at the end of the session on one computer, say my desktop, I run =~/DropboxClone/home.sh push=. Start using my laptop, and before I have done anything I run the command =~/DropboxClone/remote.sh pull= if I am outside my local network or =~/DropboxClone/home.sh pull= if I am inside of it.

There are only two options for arguments, and no default
    - *push* assume that everything on this computer is more up to date than anywhere else, overwrite all files on the server that have been modified by this computer.
    - *pull* assume that the server is more up to date than this computer, overwrite all files on this computer that are more up to date on the server

By using the *push* and *pull* command correctly, you transfer the "up to date-ness" from your computer, to the server, to your other computer

* Warnings
This bash script does not work on Windows, and I have not tried it in Cygwin. Use at your own risk, but if you find a solution feel free to send me a pull request.

The updating functionality of =rsync= is rudimentary and can be *destructive* (losing files, loosing contense of files, etc), as such, the only real way to use this script is to use it as intended as described in the [[https://github.com/zZelman/DropboxClone#usage][Usage]] section. But if you do so, you have an extreamly light weight Dropbox clone which you can control yourself when you want to.

If you have a collision, *DropboxClone will not care*, it will do exactly what you tell it and you will probably loose things. If by chance you do not run this script as intended and have one computer that is more up to date than another in some areas, but not in others, it is up to you to figure out how to get yourself out of it.

* Tips
    - You allow this script to be executed from anywhere by symlinking it to your =~/usr/bin= by running =sudo ln -s ~/DropboxClone/home.sh /usr/bin/dropbox-home= and =sudo ln -s ~/DropboxClone/remote.sh /usr/bin/dropbox-remote=
    - You can add this to your bash aliases by adding =alias dropbox-remote=~/DropboxClone/remote.sh= and =alias dropbox-home=~/DropboxClone/home.sh=
    - You can add anything to the =pre_push.sh= and =post_pull.sh= that would help you sync files outside of the =~/DropboxClone= directory, like dot files. I have given an example for Emacs' =~/.emacs.d= in them.
    - I normally have a secondary folder within =~/DropboxClone= called =~/DropboxClone/Dropbox= this is to seperate the syncing scrips from anything else that I have in there.
    - You can have a temporary folder within DropboxClone like =~/DropboxClone/Dropbox/tmp/= to store things in that you dont want to transfer on a USB by transferring them bu using the normal *push* switch *pull* [[https://github.com/zZelman/DropboxClone#usage][Usage]]
    - You can actually sync whole GitHub repositories with outstanding eddits from one computer to another using DropboxClone (type at home, type at work, you are editing the same files)
    - You can use =pre_push.sh= and =post_pull.sh= to sync all important dot files, I use it to sync my configs, aliases, browser addons, emacs, cache, local, ssh and thunderbird. Just copy the files into DropboxClone in =pre_push.sh= and copy them into their normal spots in =post_pull.sh=. I have given an example of this for my =~/.emacs.d/=

* Contact information
If you have an issue or want help from a human, feel free to open an Issue on this repository and I will help
